## piping


# There are more things in git and piping, Horatio,
# than are dreamt of in your philosophy.
#                   - echo "WS" \
#                       | sed 's/WS/R/' \
#                       | awk '{print $0"M"}'
#

# files with different statuses
$ git s | grep ^UU
$ git s | grep ^M
$ git s | grep ^R

# open conflicted files
$ git s | grep ^UU | cut -c3- | xargs o

# open files with BitSet in name
$ git ls-files *BitSet* | xargs o

# alias hidden: show hidden files
$ git ls-files -v | grep '^h' | cut -c3-
$ git hidden

# hide and unhide are aliases
$ git hide
$ git unhide

# hide modified files and then unhide them
$ git s | grep ^M | xargs git hide
$ git hidden | xargs git unhide

# open files with space in them
$ git ls-files "<sproc>"
    | sed 's/^/"/' | sed 's/$/"/'
    | xargs o

$ git ls-files *<sproc>* 
    | awk '{print "\""$0"\""}' 
    | xargs o

$ git ls-files -z *<sproc>*
    | xargs -0 o

# 'wrap' wraps any paths in quotes to handle spaces
$ git lsf "<sproc>" | wrap | xargs o

# `wrap` is piping-friendly
$ o ~/bin/wrap

# open files with "next"
$ git grep "next" | cut -f1 -d':' | wrap | xargs o

# delete merged branches except few
$ git b --merged 
    | egrep -v "(\*|master|pu|maint|next)"
    | egrep "cr/"
    | xargs git branch -d

# delete oldest 3 cr/* branches except current
$ git b --sort=committerdate
    | egrep -v "\*"
    | egrep "cr/"
    | head -3
    | xargs git b -d

# top 2 items
$ ... | head -2
# last 2 items
$ ... | tail -2
# 2nd line item
$ ... | sed -n '2 p'

# text tools that support piping
sed streaming editor
awk text processing tool
