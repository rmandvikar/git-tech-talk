## rebase -i


# Commit often, perfect later.

#              master
#   ---o---o---o
#               \     
#                A---B---C---D topic

(topic)
$ git rebase -i master|head~4

pick A
pick B
pick C
pick D

# Commands:
# p, pick = use commit
# r, reword = use commit, but edit the commit message
# e, edit = use commit, but stop for amending
# s, squash = use commit, but meld into previous commit
# f, fixup = like "squash", but discard this commit's log message
# x, exec = run command (the rest of the line) using shell
# d, drop = remove commit

# scenario 1: edit, pick, drop

edit A
pick B
drop C
drop D

stopped at A... 
(some changes...)
$ git add .
$ git rebase --continue

#              master
#   ---o---o---o
#              |\     
#              | A---B---C---D
#               \
#                A'--B' topic


# scenario 2: reorder commits

pick A
pick C
pick B
pick D

#              master
#   ---o---o---o
#              |\     
#              | A---B---C---D
#               \
#                A'--C'--B'--D' topic

# scenario 3: pick, fixup, reorder, drop

pick A
fixup C
pick B
#edit D (dropping D by commenting)

# results in
AC (commits A+C)
B  (commit B)

#              master
#   ---o---o---o
#              |\     
#              | A---B---C---D
#               \
#                AC'--B' topic
